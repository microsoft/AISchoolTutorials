<!-- Copyright (c) Microsoft Corporation. All rights reserved -->
<!--  Licensed under the MIT License. -->
<controls:DpiAwareWindow x:Class="SnipInsight.Views.TwoButtonDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:SnipInsight.Controls"
             xmlns:ari="clr-namespace:SnipInsight.Controls.Ariadne"
             mc:Ignorable="d"
             ResizeMode="NoResize"
             WindowStyle="None"
             WindowState="Normal"
             SizeToContent="WidthAndHeight"
             WindowStartupLocation="CenterOwner"
             Margin="0"
             Padding="0"
             MinWidth="300"
             MaxWidth="400"
                FontSize="{DynamicResource ExtraSmallFontSize}"
                Background="{DynamicResource RebrandbackgroundApp}"
             AutomationProperties.Name = "{Binding ElementName=DialogMessageText, Path=Text}">
    <controls:DpiAwareWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../ResourceDictionaries/SnipStyles.xaml" />
                <ResourceDictionary Source="../ResourceDictionaries/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="borderStyle" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource RebrandBackgroundResults}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="{DynamicResource RebrandDarkerBackground}"/>
                <Setter Property="CornerRadius" Value="2"/>
                <Setter Property="Padding" Value="17"/>
            </Style>

            <Style x:Key="shortcutStyle" TargetType="TextBlock">
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="{DynamicResource BigFontSize}"/>
                <Setter Property="Foreground" Value="{DynamicResource RebrandText}"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="Margin" Value="0, 4"/>
            </Style>

            <Style x:Key="descriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource shortcutStyle}">
                <Setter Property="FontSize" Value="{DynamicResource ExtraSmallFontSize}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="rebrandAriDialogButton" TargetType="{x:Type ari:AriDialogButton}">
                <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
                <Setter Property="Background" Value="{DynamicResource RebrandButtonBackground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource RebrandDarkerBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource RebrandText}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="MinHeight" Value="32" />
                <Setter Property="MinWidth" Value="84" />
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="bg" Fill="{TemplateBinding Background}" />
                                <Border x:Name="border" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" 
                                                      Focusable="False" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      Margin="{TemplateBinding Padding}" 
                                                      RecognizesAccessKey="True" 
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Visibility="Collapsed" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="White" StrokeDashArray="1,1" Margin="2"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource RebrandDarkestBackground}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value=".5" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </controls:DpiAwareWindow.Resources>

    <Border Style="{StaticResource borderStyle}">
        <StackPanel Orientation="Vertical">
            <TextBlock Name="DialogMessageText"
                   Style="{StaticResource descriptionStyle}"
                   Text="Hello"
                   TextWrapping="WrapWithOverflow"
                   Margin="0,0,0,30"/>

            <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    KeyboardNavigation.TabNavigation="Cycle">
                <ari:AriDialogButton x:Name="Button1"
                                     Style="{StaticResource rebrandAriDialogButton}"
                                     Content="Yes"
                                     Margin="0,0,15,0"
                                     TabIndex="2"
                                     IsTabStop="True"
                                     Click="Button1_OnClick"
                                     IsDefault="True"
                                     AutomationProperties.Name="Yes" />
                <ari:AriDialogButton x:Name="Button2"
                                     Style="{StaticResource rebrandAriDialogButton}"
                                     Content="No"
                                     Margin="0,0,0,0"
                                     TabIndex="1"
                                     IsTabStop="True"
                                     Click="Button2_OnClick"
                                     IsCancel="True"
                                     AutomationProperties.Name="No" />
            </StackPanel>
        </StackPanel>
    </Border>
</controls:DpiAwareWindow>
